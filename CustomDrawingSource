-- CustomDrawingModule.lua

-- Define the module
local CustomDrawingModule = {}
CustomDrawingModule.__index = CustomDrawingModule

-- Create or retrieve the CustomDrawingUI in CoreGui
local function ensureCustomDrawingUi()
    local coreGui = game:GetService("CoreGui")
    local customDrawingUi = coreGui:FindFirstChild("CustomDrawingUi")
    
    if not customDrawingUi then
        customDrawingUi = Instance.new("ScreenGui")
        customDrawingUi.Name = "CustomDrawingUi"
        customDrawingUi.IgnoreGuiInset = true
        customDrawingUi.Parent = coreGui
    end
    
    return customDrawingUi
end

-- Drawable object metatable setup
local function setupObject(objectType)
    local drawingObject = Drawing.new(objectType)
    return setmetatable({}, {
        __index = function(_, key)
            return drawingObject[key]
        end,
        __newindex = function(_, key, value)
            if drawingObject[key] ~= nil then
                drawingObject[key] = value
            else
                warn("Invalid property: " .. tostring(key))
            end
        end,
        __tostring = function()
            return objectType
        end,
        __metatable = "Locked"
    }), drawingObject
end

-- Circle class
local function createCircle()
    local circle, _ = setupObject("Circle")
    return circle
end

-- Line class
local function createLine()
    local line, _ = setupObject("Line")
    return line
end

-- Text class
local function createText()
    local text, _ = setupObject("Text")
    return text
end

-- Square (Rectangle) class
local function createSquare()
    local square, _ = setupObject("Square")
    return square
end

-- Triangle class
local function createTriangle()
    local triangle, _ = setupObject("Triangle")
    return triangle
end

-- Factory method to create new drawable objects
function CustomDrawingModule.new(objectType)
    ensureCustomDrawingUi()
    
    if objectType == "Circle" then
        return createCircle()
    elseif objectType == "Line" then
        return createLine()
    elseif objectType == "Text" then
        return createText()
    elseif objectType == "Square" then
        return createSquare()
    elseif objectType == "Triangle" then
        return createTriangle()
    else
        error("Unknown object type: " .. tostring(objectType))
    end
end

return CustomDrawingModule
